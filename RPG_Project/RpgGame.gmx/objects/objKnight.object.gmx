<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKnight_Down_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize Variables
heroMoveSpeed = 2;
spriteDirection = "Down";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move the hero

//Set move variables
    //Arrow keys
    var key_right_arrow = keyboard_check(vk_right);
    var key_left_arrow = keyboard_check(vk_left);
    var key_up_arrow = keyboard_check(vk_up);
    var key_down_arrow = keyboard_check(vk_down);
    
    //Letter keys
    var key_right_letter = keyboard_check(ord("D"));
    var key_left_letter = keyboard_check(ord("A"));
    var key_up_letter = keyboard_check(ord("W"));
    var key_down_letter = keyboard_check(ord("S"));
       
//React to keys
    //Right movement
    if ((key_right_arrow) || (key_right_letter)) &amp;&amp; (place_free(x+heroMoveSpeed,y)){
        x += heroMoveSpeed;
        sprite_index = sprKnight_Side_Walk;
        image_xscale = 1;
        image_speed = 0.2;
        spriteDirection = "Right"
    }
    //Left movement
    if ((key_left_arrow) || (key_left_letter)) &amp;&amp; (place_free(x-heroMoveSpeed,y)) {
        x -= heroMoveSpeed;
        sprite_index = sprKnight_Side_Walk;
        image_xscale = -1;
        image_speed = 0.2;
        spriteDirection = "Left";
    }
    //Up movement
    if ((key_up_arrow) || (key_up_letter))&amp;&amp; (place_free(x,y-heroMoveSpeed)){
        y -= heroMoveSpeed;
        sprite_index = sprKnight_Up_Walk;
        image_speed = 0.2;
        spriteDirection = "Up"
    }
    //Down movement
    if ((key_down_arrow) || (key_down_letter)) &amp;&amp; (place_free(x,y+heroMoveSpeed)){
        y += heroMoveSpeed;
        sprite_index = sprKnight_Down_Walk;
        image_speed = 0.2;
        spriteDirection = "Down"
    }
    
    
    //Sprite idle animation
    if (!key_right_arrow) &amp;&amp; (!key_left_arrow) &amp;&amp; (!key_up_arrow) &amp;&amp; (!key_down_arrow) &amp;&amp; (!key_right_letter) &amp;&amp; (!key_left_letter) &amp;&amp; (!key_up_letter) &amp;&amp; (!key_down_letter) {
        if (spriteDirection == "Right") {
            sprite_index = sprKnight_Side_Idle;
            image_xscale = 1;
            image_speed = .2;
        }
        if (spriteDirection == "Left") {
            sprite_index = sprKnight_Side_Idle;
            image_xscale = -1;
            image_speed = .2;
        }
        if (spriteDirection == "Up") {
            sprite_index = sprKnight_Up_Idle;
            image_speed = .2;
        }
        if (spriteDirection == "Down") {
            sprite_index = sprKnight_Down_Idle;
            image_speed = .2;
        }
    }
    //Stop animation
    if (((key_right_arrow) || (key_right_letter)) &amp;&amp; (key_left_arrow || key_left_letter)) {
        sprite_index = sprKnight_Side_Idle;
    }



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
